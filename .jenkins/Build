pipeline {
    agent {
        docker { image 'cimg/android:2024.01.1-node' }
    }

    stages {
        stage('Build Logic Check') {
            steps {
                sh './gradlew check -p build-logic'
            }
        }

        stage('Spotless Check') {
            steps {
                sh './gradlew spotlessCheck --init-script gradle/init.gradle.kts'
            }
        }

        stage('Dependency Guard') {
            steps {
                // Jenkins does not have a direct equivalent to `continue-on-error`
                // You may need to handle errors manually
                sh '''
                    set +e
                    ./gradlew dependencyGuard
                    RESULT=$?
                    set -e
                    if [ $RESULT -ne 0 ] && [ "$CHANGE_ID" != null ]; then
                        ./gradlew dependencyGuardBaseline
                    fi
                '''
            }
        }

        stage('Run Local Tests and Lint') {
            steps {
                sh '''
                    echo "sdk.dir=$ANDROID_HOME" > local.properties
                    ./gradlew testDemoDebug :lint:test :app:lintProdRelease :app-nia-catalog:lintRelease :lint:lint
                   '''
            }
        }

        stage('Build APK') {
            steps {
                sh './gradlew :app:assemble :benchmarks:assemble -x pixel6Api33ProdNonMinifiedReleaseAndroidTest -x pixel6Api33DemoNonMinifiedReleaseAndroidTest -x collectDemoNonMinifiedReleaseBaselineProfile -x collectProdNonMinifiedReleaseBaselineProfile'
            }
        }

        stage('Upload Artifacts') {
            steps {
                archiveArtifacts artifacts: '**/build/outputs/apk/**/*.apk', fingerprint: true
                archiveArtifacts artifacts: '**/build/test-results/test*UnitTest/**/*.xml', fingerprint: true
                archiveArtifacts artifacts: '**/build/reports/lint-results-*.html', fingerprint: true
            }
        }
    }

    post {
        always {
            // Clean up workspace after build
            cleanWs()
        }
    }
}