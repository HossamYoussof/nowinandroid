pipeline {
    agent {
        node {
            label 'android'
        }
    }

    stages {
        stage('Copy CI gradle.properties') {
            steps {
                script {
                    sh 'mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties'
                }
            }
        }

        stage('Check build-logic') {
            steps {
                sh './gradlew :build-logic:convention:check'
            }
        }

        stage('Check spotless') {
            steps {
                sh './gradlew spotlessCheck --init-script gradle/init.gradle.kts --no-configuration-cache'
            }
        }

        stage('Check Dependency Guard') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh './gradlew dependencyGuard dependencyGuardBaseline'
                }
            }
        }

        stage('Run local tests') {
            steps {
                sh './gradlew testDemoDebug :lint:test'
            }
        }

        stage('Build all build type and flavor permutations') {
            steps {
                sh './gradlew :app:assemble'
            }
        }

        stage('Upload Artifacts') {
            steps {
                archiveArtifacts artifacts: '**/build/outputs/apk/**/*.apk', fingerprint: true
                archiveArtifacts artifacts: '**/build/test-results/test*UnitTest/**/*.xml', fingerprint: true
                archiveArtifacts artifacts: '**/build/reports/lint-results-*.html', fingerprint: true
            }
        }
    }
}