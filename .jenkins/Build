pipeline {
    agent {
        node {
            label 'android'
        }
    }

    stages {
        stage('Copy CI gradle.properties') {
            steps {
                script {
                    sh 'mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties'
                }
            }
        }

        stage('Build Logic Check') {
            steps {
                sh './gradlew check -p build-logic'
            }
        }

        stage('Run Local Tests and Lint') {
            steps {
                sh '''
                    ./gradlew testDemoDebug :lint:test :app:lintProdRelease :app-nia-catalog:lintRelease :lint:lint
                   '''
            }
        }

        stage('Build APK') {
            steps {
                sh './gradlew :app:assemble :benchmarks:assemble -x pixel6Api33ProdNonMinifiedReleaseAndroidTest -x pixel6Api33DemoNonMinifiedReleaseAndroidTest -x collectDemoNonMinifiedReleaseBaselineProfile -x collectProdNonMinifiedReleaseBaselineProfile'
            }
        }

        stage('Upload Artifacts') {
            steps {
                archiveArtifacts artifacts: '**/build/outputs/apk/**/*.apk', fingerprint: true
                archiveArtifacts artifacts: '**/build/test-results/test*UnitTest/**/*.xml', fingerprint: true
                archiveArtifacts artifacts: '**/build/reports/lint-results-*.html', fingerprint: true
            }
        }
    }
}